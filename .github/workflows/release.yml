name: Release Build

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      debug:
        description: 'Enable debug output'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate icon files
        run: |
          echo "Generating icon files..."
          make icon

          echo "Verifying icon files:"
          ls -la build/

      - name: Build Electron application
        run: |
          echo "Building Electron application..."
          npm run build

          echo "Build completed. Checking output:"
          ls -la dist/
        env:
          NODE_ENV: production
          CI: true

      - name: List build artifacts
        run: |
          echo "Build artifacts created:"
          ls -la dist/

      - name: Find and upload DMG files to release
        if: github.event_name == 'release'
        run: |
          for dmg_file in dist/*.dmg; do
            if [ -f "$dmg_file" ]; then
              filename=$(basename "$dmg_file")
              # Clean filename for release asset
              clean_name=$(echo "$filename" | sed 's/ /-/g')

              echo "Uploading $dmg_file as $clean_name"

              gh release upload ${{ github.event.release.tag_name }} \
                "$dmg_file#$clean_name" \
                --clobber
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug output (manual dispatch only)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.debug == 'true'
        run: |
          echo "=== Debug Information ==="
          echo "Event name: ${{ github.event_name }}"
          echo "Debug enabled: ${{ github.event.inputs.debug }}"
          echo "Build artifacts:"
          find dist/ -type f || echo "No dist directory found"
          echo "=== Environment ==="
          env | grep -E "(GITHUB_|NODE_)" | sort

      - name: Upload build artifacts as workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-artifacts
          path: |
            dist/*.dmg
            dist/*.zip
            dist/*.tar.gz
          retention-days: 30

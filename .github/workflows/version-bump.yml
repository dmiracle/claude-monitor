name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get current version
        id: current_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Bump version
        id: bump_version
        run: |
          # Install semver for version bumping
          npm install -g semver
          
          CURRENT_VERSION="${{ steps.current_version.outputs.version }}"
          VERSION_TYPE="${{ github.event.inputs.version_type }}"
          NEW_VERSION=$(semver -i $VERSION_TYPE $CURRENT_VERSION)
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Bumping from $CURRENT_VERSION to $NEW_VERSION ($VERSION_TYPE)"
          
          # Update package.json
          npm version $NEW_VERSION --no-git-tag-version
          
          # Update package-lock.json if it exists
          if [ -f "package-lock.json" ]; then
            npm install --package-lock-only
          fi

      - name: Commit version bump
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          git add package.json package-lock.json
          git commit -m "chore: bump version to v$NEW_VERSION"
          git push origin main

      - name: Create and push tag
        run: |
          NEW_VERSION="${{ steps.bump_version.outputs.new_version }}"
          git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
          git push origin "v$NEW_VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump_version.outputs.new_version }}
          name: Release v${{ steps.bump_version.outputs.new_version }}
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-release-build:
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Trigger release workflow
        run: |
          echo "Version bump completed. The release workflow will be triggered automatically by the new tag."
          echo "New version: v${{ needs.bump-version.outputs.new_version }}"